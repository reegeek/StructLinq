<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--<TargetFrameworks>netstandard1.1;net452;net472;net48;netcoreapp2.1;netcoreapp2.2;netcoreapp3.0;netcoreapp3.1;net50;net60;net70</TargetFrameworks>-->
    <TargetFrameworks>net70;net60;net48</TargetFrameworks>
	<OldVersion>True</OldVersion>
	<OldVersion Condition="'$(TargetFramework)' == 'netstandard1.1' Or '$(TargetFramework)' == 'net452'">true</OldVersion>
  </PropertyGroup>

  <PropertyGroup Label="Nuget">
    <Description>Implementation in C# of LINQ concept with struct </Description>
    <PackageTags>C#;linq;struct;allocation free;fast</PackageTags>
    <Company />
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Fody" Version="6.6.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="InlineIL.Fody" Version="1.7.3">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="System.Buffers" Version="4.5.1" />
    
	<PackageReference Condition="!'$(OldVersion)'" Include="System.Collections.Immutable" Version="7.0.0" />
	<PackageReference Condition="'$(OldVersion)'" Include="System.Collections.Immutable" Version="5.0.0" />
	<PackageReference Include="System.ValueTuple" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Contains\StructEnumerable.Value.Contains.tt">
      <LastGenOutput>StructEnumerable.Value.Contains.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="DefaultStructInEqualityComparer.tt">
      <LastGenOutput>DefaultStructInEqualityComparer.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="DefaultStructEqualityComparer.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>DefaultStructEqualityComparer.cs</LastGenOutput>
    </None>
    <None Update="Distinct\StructEnumerable.Value.Distinct.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>StructEnumerable.Value.Distinct.cs</LastGenOutput>
    </None>
    <None Update="Max\MinStructCollection.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    

    <None Update="Sum\SumRefStructEnumerable.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>SumRefStructEnumerable.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <ItemGroup>
    <None Update="Max\MaxStructEnumerable.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MaxStructEnumerable.cs</LastGenOutput>
    </None>
    <Compile Update="Max\MaxStructEnumerable.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>MaxStructEnumerable.tt</DependentUpon>
    </Compile>

    <None Update="Max\MaxStructCollection.tt">
      <LastGenOutput>MaxStructCollection.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <Compile Update="Max\MaxStructCollection.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>MaxStructCollection.tt</DependentUpon>
    </Compile>


    <None Update="Min\MinStructEnumerable.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MinStructEnumerable.cs</LastGenOutput>
    </None>
    <Compile Update="Min\MinStructEnumerable.cs">
      <DependentUpon>MinStructEnumerable.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>

    <None Update="Min\MinStructCollection.tt">
      <LastGenOutput>MinStructCollection.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <Compile Update="Min\MinStructCollection.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>MinStructCollection.tt</DependentUpon>
    </Compile>

    
    <None Update="Sum\SumStructEnumerable.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>SumStructEnumerable.cs</LastGenOutput>
    </None>
    <Compile Update="Sum\SumStructEnumerable.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>SumStructEnumerable.tt</DependentUpon>
    </Compile>

  </ItemGroup>

  <ItemGroup>
    <Compile Update="Contains\StructEnumerable.Value.Contains.cs">
      <DependentUpon>StructEnumerable.Value.Contains.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="DefaultStructEqualityComparer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>DefaultStructEqualityComparer.tt</DependentUpon>
    </Compile>
	  <Compile Update="DefaultStructInEqualityComparer.cs">
		  <DesignTime>True</DesignTime>
		  <AutoGen>True</AutoGen>
		  <DependentUpon>DefaultStructInEqualityComparer.tt</DependentUpon>
	  </Compile>
	  <Compile Update="Distinct\StructEnumerable.Value.Distinct.cs">
	    <DesignTime>True</DesignTime>
	    <AutoGen>True</AutoGen>
	    <DependentUpon>StructEnumerable.Value.Distinct.tt</DependentUpon>
	  </Compile>
    <Compile Update="Sum\SumRefStructEnumerable.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>SumRefStructEnumerable.tt</DependentUpon>
    </Compile>
  </ItemGroup>

</Project>

